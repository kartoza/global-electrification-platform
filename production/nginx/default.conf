# Define connection details for connecting to django running in
# a docker container.
server {
    # OTF gzip compression
    gzip on;
    gzip_min_length 860;
    gzip_comp_level 5;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain application/xml application/x-javascript text/xml text/css application/json;
    gzip_disable “MSIE [1-6].(?!.*SV1)”;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # the port your site will be served on
    listen      8080;
    # the domain name it will serve for
    #server_name *;
    charset     utf-8;

    location /assets {
        root /home/explorer/dist;
        include  /etc/nginx/mime.types;
    }

    location /gep-server {
        set $upstream backend:3000;

        # Using a variable is a trick to let Nginx start even if upstream host is not up yet
        # (see https://sandro-keil.de/blog/2017/07/24/let-nginx-start-if-upstream-host-is-unavailable-or-down/)
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        if ($request_uri ~* "/gep-server/(.*)") {
            proxy_pass http://$upstream/$1;
        }
    }

    location / {
        root /home/explorer/dist;
        try_files $uri /index.html =404;
    }
}
