version: '3.4'
volumes:
  gep-database:
  frontend:

# This is for production
# TODO:
#  Add other services

services:
  db:
    # About the postgresql version, it should match in the dockerfile of docker-imposm3
    container_name: "gep-db"
    image: kartoza/postgis:12.0
    hostname: db
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - POSTGRES_DBNAME=gis
      # Uncomment to expose the postgis database on the network
      # - ALLOW_IP_RANGE= 0.0.0.0/0
    volumes:
      - gep-database:/var/lib/postgresql/data/
    healthcheck:
      test: "exit 0"

  backend:
    container_name: "gep-backend"
    image: kartoza/gep_backend:${GEP_BACKEND_TAG:-2.0.0}
    entrypoint: setup.sh
    links:
      - db:db
    ports:
      - "3000:3000"

  frontend:
    container_name: "gep-frontend"
    image: kartoza/gep_frontend:${GEP_FRONTEND_TAG:-2.0.0}
    entrypoint: setup.sh
    command: yarn serve
    volumes:
      - frontend:/home/explorer
    ports:
      - "9000:9000"

  nginx:
    image: nginx
    container_name: "gep-nginx"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - frontend:/home/explorer:ro
    ports:
      - "${HTTP_PORT:-80}:8080"
    restart: on-failure:5